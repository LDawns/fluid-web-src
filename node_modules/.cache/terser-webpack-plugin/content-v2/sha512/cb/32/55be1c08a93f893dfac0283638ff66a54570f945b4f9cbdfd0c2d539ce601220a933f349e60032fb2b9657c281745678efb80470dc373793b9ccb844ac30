{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{503:function(e,s,a){\"use strict\";a.r(s);var t=a(50),n=Object(t.a)({},(function(){var e=this,s=e.$createElement,a=e._self._c||s;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"示例-fuse客户端全局部署\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#示例-fuse客户端全局部署\"}},[e._v(\"#\")]),e._v(\" 示例 - Fuse客户端全局部署\")]),e._v(\" \"),a(\"p\",[e._v(\"在Fluid中，\"),a(\"code\",[e._v(\"Dataset\")]),e._v(\"资源对象中所定义的远程文件是可被调度的，这意味着你能够像管理你的Pod一样管理远程文件缓存在Kubernetes集群上的存放位置。 而执行计算的Pod可以通过Fuse客户端访问数据文件。\")]),e._v(\" \"),a(\"p\",[e._v(\"Fuse客户端提供两种模式：\")]),e._v(\" \"),a(\"ol\",[a(\"li\",[a(\"p\",[e._v(\"global为false，该模式为Fuse客户端和缓存数据强制亲和性，此时Fuse客户端的数量等于Runtime的replicas数量。此配置默认模式，无需显式声明，好处是可以发挥数据的亲和性优点，但是Fuse客户端的部署就变得比较固定。\")])]),e._v(\" \"),a(\"li\",[a(\"p\",[e._v(\"global为true， 该模式为Fuse客户端可以在Kubernetes集群中全局部署，并不要求数据和Fuse客户端之间的强制亲和性，此时Fuse客户端的数量可能远远超Runtime的replicas数量。 建议此时可以通过nodeSelector来指定Fuse客户端的部署范围。\")])])]),e._v(\" \"),a(\"p\",[e._v(\"本文档将向你简单地展示上述特性\")]),e._v(\" \"),a(\"h2\",{attrs:{id:\"前提条件\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#前提条件\"}},[e._v(\"#\")]),e._v(\" 前提条件\")]),e._v(\" \"),a(\"p\",[e._v(\"在运行该示例之前，请参考\"),a(\"RouterLink\",{attrs:{to:\"/zh/userguide/install.html\"}},[e._v(\"安装文档\")]),e._v(\"完成安装，并检查Fluid各组件正常运行：\")],1),e._v(\" \"),a(\"div\",{staticClass:\"language-shell extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[a(\"code\",[e._v(\"$ kubectl get pod -n fluid-system\\nalluxioruntime-controller-5b64fdbbb-84pc6   \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"1\")]),e._v(\"/1     Running   \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"0\")]),e._v(\"          8h\\ncsi-nodeplugin-fluid-fwgjh                  \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"2\")]),e._v(\"/2     Running   \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"0\")]),e._v(\"          8h\\ncsi-nodeplugin-fluid-ll8bq                  \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"2\")]),e._v(\"/2     Running   \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"0\")]),e._v(\"          8h\\ndataset-controller-5b7848dbbb-n44dj         \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"1\")]),e._v(\"/1     Running   \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"0\")]),e._v(\"          8h\\n\")])])]),a(\"p\",[e._v(\"通常来说，你会看到一个名为\"),a(\"code\",[e._v(\"dataset-controller\")]),e._v(\"的Pod、一个名为\"),a(\"code\",[e._v(\"alluxioruntime-controller\")]),e._v(\"的Pod和多个名为\"),a(\"code\",[e._v(\"csi-nodeplugin\")]),e._v(\"的Pod正在运行。其中，\"),a(\"code\",[e._v(\"csi-nodeplugin\")]),e._v(\"这些Pod的数量取决于你的Kubernetes集群中结点的数量。\")]),e._v(\" \"),a(\"h2\",{attrs:{id:\"新建工作环境\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#新建工作环境\"}},[e._v(\"#\")]),e._v(\" 新建工作环境\")]),e._v(\" \"),a(\"div\",{staticClass:\"language-shell extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[a(\"code\",[e._v(\"$ \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[e._v(\"mkdir\")]),e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<\")]),e._v(\"any-path\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\">\")]),e._v(\"/fuse-global-deployment\\n$ \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[e._v(\"cd\")]),e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<\")]),e._v(\"any-path\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\">\")]),e._v(\"/fuse-global-deployment\\n\")])])]),a(\"h2\",{attrs:{id:\"运行示例1-设置global为true\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#运行示例1-设置global为true\"}},[e._v(\"#\")]),e._v(\" 运行示例1: 设置global为true\")]),e._v(\" \"),a(\"p\",[a(\"strong\",[e._v(\"查看全部结点\")])]),e._v(\" \"),a(\"div\",{staticClass:\"language-shell extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[a(\"code\",[e._v(\"$ kubectl get nodes\\nNAME                       STATUS   ROLES    AGE     VERSION\\ncn-beijing.192.168.1.146   Ready    \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<\")]),e._v(\"none\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\">\")]),e._v(\"   7d14h   v1.16.9-aliyun.1\\ncn-beijing.192.168.1.147   Ready    \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<\")]),e._v(\"none\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\">\")]),e._v(\"   7d14h   v1.16.9-aliyun.1\\n\")])])]),a(\"p\",[a(\"strong\",[e._v(\"使用标签标识结点\")])]),e._v(\" \"),a(\"div\",{staticClass:\"language-shell extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[a(\"code\",[e._v(\"$ kubectl label nodes cn-beijing.192.168.1.146 cache-node\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"=\")]),e._v(\"true\\n\")])])]),a(\"p\",[e._v(\"在接下来的步骤中，我们将使用\"),a(\"code\",[e._v(\"NodeSelector\")]),e._v(\"来管理集群中存放数据的位置，所以在这里标记期望的结点\")]),e._v(\" \"),a(\"p\",[a(\"strong\",[e._v(\"再次查看结点\")])]),e._v(\" \"),a(\"div\",{staticClass:\"language-shell extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[a(\"code\",[e._v(\"$ kubectl get node -L cache-node\\nNAME                       STATUS   ROLES    AGE     VERSION            cache-node\\ncn-beijing.192.168.1.146   Ready    \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<\")]),e._v(\"none\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\">\")]),e._v(\"   7d14h   v1.16.9-aliyun.1   \"),a(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[e._v(\"true\")]),e._v(\"\\ncn-beijing.192.168.1.147   Ready    \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<\")]),e._v(\"none\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\">\")]),e._v(\"   7d14h   v1.16.9-aliyun.1   \\n\")])])]),a(\"p\",[e._v(\"目前，在全部2个结点中，仅有一个结点添加了\"),a(\"code\",[e._v(\"cache-node=true\")]),e._v(\"的标签，接下来，我们希望数据缓存仅会被放置在该结点之上\")]),e._v(\" \"),a(\"p\",[a(\"strong\",[e._v(\"检查待创建的Dataset资源对象\")])]),e._v(\" \"),a(\"div\",{staticClass:\"language-shell extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[a(\"code\",[e._v(\"$ cat\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<<\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[e._v(\"EOF\"),a(\"span\",{pre:!0,attrs:{class:\"token bash punctuation\"}},[e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\">\")]),e._v(\"dataset.yaml\")]),e._v('\\napiVersion: data.fluid.io/v1alpha1\\nkind: Dataset\\nmetadata:\\n  name: hbase\\nspec:\\n  mounts:\\n    - mountPoint: https://mirrors.tuna.tsinghua.edu.cn/apache/hbase/stable/\\n      name: hbase\\n  nodeAffinity:\\n    required:\\n      nodeSelectorTerms:\\n        - matchExpressions:\\n            - key: cache-node\\n              operator: In\\n              values:\\n                - \"true\"\\nEOF')]),e._v(\"\\n\")])])]),a(\"p\",[e._v(\"在该\"),a(\"code\",[e._v(\"Dataset\")]),e._v(\"资源对象的\"),a(\"code\",[e._v(\"spec\")]),e._v(\"属性中，我们定义了一个\"),a(\"code\",[e._v(\"nodeSelectorTerm\")]),e._v(\"的子属性，该子属性要求数据缓存必须被放置在具有\"),a(\"code\",[e._v(\"cache-node=true\")]),e._v(\"标签的结点之上\")]),e._v(\" \"),a(\"p\",[a(\"strong\",[e._v(\"创建Dataset资源对象\")])]),e._v(\" \"),a(\"div\",{staticClass:\"language-shell extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[a(\"code\",[e._v(\"$ kubectl create -f dataset.yaml\\ndataset.data.fluid.io/hbase created\\n\")])])]),a(\"p\",[a(\"strong\",[e._v(\"检查待创建的AlluxioRuntime资源对象\")])]),e._v(\" \"),a(\"div\",{staticClass:\"language-shell extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[a(\"code\",[e._v(\"$ cat\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<<\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[e._v(\"EOF\"),a(\"span\",{pre:!0,attrs:{class:\"token bash punctuation\"}},[e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\">\")]),e._v(\"runtime.yaml\")]),e._v('\\napiVersion: data.fluid.io/v1alpha1\\nkind: AlluxioRuntime\\nmetadata:\\n  name: hbase\\nspec:\\n  replicas: 1\\n  tieredstore:\\n    levels:\\n      - mediumtype: MEM\\n        path: /dev/shm\\n        quota: 2Gi\\n        high: \"0.95\"\\n        low: \"0.7\"\\n  fuse:\\n    global: true\\nEOF')]),e._v(\"\\n\")])])]),a(\"p\",[e._v(\"该配置文件片段中，包含了许多与Alluxio相关的配置信息，这些信息将被Fluid用来启动一个Alluxio实例。上述配置片段中的\"),a(\"code\",[e._v(\"spec.replicas\")]),e._v(\"属性被设置为1,这表明Fluid将会启动一个包含1个Alluxio Master和1个Alluxio Worker的Alluxio实例。 另外一个值得注意的是Fuse包含\"),a(\"code\",[e._v(\"global: true\")]),e._v(\",\"),a(\"br\"),e._v(\"\\n这样意味着Fuse可以全局部署，而不依赖于数据缓存的位置。\")]),e._v(\" \"),a(\"p\",[a(\"strong\",[e._v(\"创建AlluxioRuntime资源并查看状态\")])]),e._v(\" \"),a(\"div\",{staticClass:\"language-shell extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[a(\"code\",[e._v(\"$ kubectl create -f runtime.yaml\\nalluxioruntime.data.fluid.io/hbase created\\n\\n$ kubectl get po -owide\\nNAME                 READY   STATUS    RESTARTS   AGE     IP              NODE                       NOMINATED NODE   READINESS GATES\\nhbase-fuse-gfq7z     \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"1\")]),e._v(\"/1     Running   \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"0\")]),e._v(\"          3m47s   \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"192.168\")]),e._v(\".1.147   cn-beijing.192.168.1.147   \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<\")]),e._v(\"none\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\">\")]),e._v(\"           \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<\")]),e._v(\"none\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\">\")]),e._v(\"\\nhbase-fuse-lmk5p     \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"1\")]),e._v(\"/1     Running   \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"0\")]),e._v(\"          3m47s   \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"192.168\")]),e._v(\".1.146   cn-beijing.192.168.1.146   \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<\")]),e._v(\"none\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\">\")]),e._v(\"           \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<\")]),e._v(\"none\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\">\")]),e._v(\"\\nhbase-master-0       \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"2\")]),e._v(\"/2     Running   \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"0\")]),e._v(\"          3m47s   \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"192.168\")]),e._v(\".1.147   cn-beijing.192.168.1.147   \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<\")]),e._v(\"none\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\">\")]),e._v(\"           \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<\")]),e._v(\"none\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\">\")]),e._v(\"\\nhbase-worker-hvbp2   \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"2\")]),e._v(\"/2     Running   \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"0\")]),e._v(\"          3m1s    \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"192.168\")]),e._v(\".1.146   cn-beijing.192.168.1.146   \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<\")]),e._v(\"none\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\">\")]),e._v(\"           \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<\")]),e._v(\"none\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\">\")]),e._v(\"\\n\")])])]),a(\"p\",[e._v(\"在此处可以看到，有一个Alluxio Worker成功启动，并且运行在具有指定标签（即\"),a(\"code\",[e._v(\"cache-node=true\")]),e._v(\"）的结点之上。Alluixo Fuse的数量为2，运行在所有的子节点上。\")]),e._v(\" \"),a(\"p\",[a(\"strong\",[e._v(\"检查AlluxioRuntime状态\")])]),e._v(\" \"),a(\"div\",{staticClass:\"language-shell extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[a(\"code\",[e._v(\"$ kubectl get alluxioruntime hbase -o wide\\nNAME    READY MASTERS   DESIRED MASTERS   MASTER PHASE   READY WORKERS   DESIRED WORKERS   WORKER PHASE   READY FUSES   DESIRED FUSES   FUSE PHASE   AGE\\nhbase   \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"1\")]),e._v(\"               \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"1\")]),e._v(\"                 Ready          \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"1\")]),e._v(\"               \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"1\")]),e._v(\"                 Ready          \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"2\")]),e._v(\"             \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"2\")]),e._v(\"               Ready        12m\\n\")])])]),a(\"p\",[e._v(\"这里可以看到Alluxio Worker的数量为1，而Alluxio Fuse的数量为2。\")]),e._v(\" \"),a(\"p\",[a(\"strong\",[e._v(\"删除AlluxioRuntime\")])]),e._v(\" \"),a(\"div\",{staticClass:\"language-shell extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[a(\"code\",[e._v(\"kubectl delete alluxioruntime hbase\\n\")])])]),a(\"h2\",{attrs:{id:\"运行示例2-设置global为true-并且设置fuse的nodeselector\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#运行示例2-设置global为true-并且设置fuse的nodeselector\"}},[e._v(\"#\")]),e._v(\" 运行示例2: 设置global为true, 并且设置fuse的nodeSelector\")]),e._v(\" \"),a(\"p\",[e._v(\"下面，我们希望通过配置node selector配置Fuse客户端，将其指定到集群中某个节点上。在本例子中，既然我们已经选择节点cn-beijing.192.168.1.146作为缓存节点，为了形成对比，这里选择节点cn-beijing.192.168.1.147运行Alluxio Fuse。\")]),e._v(\" \"),a(\"div\",{staticClass:\"language-shell extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[a(\"code\",[e._v(\"$ cat\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<<\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[e._v(\"EOF\"),a(\"span\",{pre:!0,attrs:{class:\"token bash punctuation\"}},[e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\">\")]),e._v(\"runtime-node-selector.yaml\")]),e._v('\\napiVersion: data.fluid.io/v1alpha1\\nkind: AlluxioRuntime\\nmetadata:\\n  name: hbase\\nspec:\\n  replicas: 1\\n  tieredstore:\\n    levels:\\n      - mediumtype: MEM\\n        path: /dev/shm\\n        quota: 2Gi\\n        high: \"0.95\"\\n        low: \"0.7\"\\n  fuse:\\n    global: true\\n    nodeSelector:\\n      kubernetes.io/hostname: cn-beijing.192.168.1.147\\nEOF')]),e._v(\"\\n\")])])]),a(\"p\",[e._v(\"该配置文件片段中，和之前runtime.yaml相比，在Fuse包含\"),a(\"code\",[e._v(\"global: true\")]),e._v(\"的前提下,  还增加了nodeSelector并且指向了节点cn-beijing.192.168.1.147。\")]),e._v(\" \"),a(\"p\",[a(\"strong\",[e._v(\"创建AlluxioRuntime资源并查看状态\")])]),e._v(\" \"),a(\"div\",{staticClass:\"language-shell extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[a(\"code\",[e._v(\"$ kubectl create -f runtime-node-selector.yaml\\nalluxioruntime.data.fluid.io/hbase created\\n\\n$ kubectl get po -owide\\nNAME                 READY   STATUS    RESTARTS   AGE   IP              NODE                       NOMINATED NODE   READINESS GATES\\nhbase-fuse-xzbww     \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"1\")]),e._v(\"/1     Running   \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"0\")]),e._v(\"          1h   \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"192.168\")]),e._v(\".1.147   cn-beijing.192.168.1.147   \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<\")]),e._v(\"none\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\">\")]),e._v(\"           \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<\")]),e._v(\"none\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\">\")]),e._v(\"\\nhbase-master-0       \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"2\")]),e._v(\"/2     Running   \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"0\")]),e._v(\"          1h   \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"192.168\")]),e._v(\".1.147   cn-beijing.192.168.1.147   \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<\")]),e._v(\"none\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\">\")]),e._v(\"           \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<\")]),e._v(\"none\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\">\")]),e._v(\"\\nhbase-worker-vdxd5   \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"2\")]),e._v(\"/2     Running   \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"0\")]),e._v(\"          1h   \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"192.168\")]),e._v(\".1.146   cn-beijing.192.168.1.146   \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<\")]),e._v(\"none\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\">\")]),e._v(\"           \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<\")]),e._v(\"none\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\">\")]),e._v(\"\\n\")])])]),a(\"p\",[e._v(\"在此处可以看到，有一个Alluxio Worker成功启动，并且运行在具有指定标签（即\"),a(\"code\",[e._v(\"cache-node=true\")]),e._v(\"）的结点之上。Alluixo Fuse的数量为1，运行在节点cn-beijing.192.168.1.147上。\")]),e._v(\" \"),a(\"p\",[a(\"strong\",[e._v(\"检查AlluxioRuntime状态\")])]),e._v(\" \"),a(\"div\",{staticClass:\"language-shell extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[a(\"code\",[e._v(\"$ kubectl get alluxioruntimes.data.fluid.io -owide\\nNAME    READY MASTERS   DESIRED MASTERS   MASTER PHASE   READY WORKERS   DESIRED WORKERS   WORKER PHASE   READY FUSES   DESIRED FUSES   FUSE PHASE   AGE\\nhbase   \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"1\")]),e._v(\"               \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"1\")]),e._v(\"                 Ready          \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"1\")]),e._v(\"               \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"1\")]),e._v(\"                 Ready          \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"1\")]),e._v(\"             \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"1\")]),e._v(\"               Ready        1h\\n\")])])]),a(\"p\",[e._v(\"这里可以看到Alluxio Worker的数量为1，而Alluxio Fuse的数量也为1，这是因为AlluxioRuntime指定了nodeSelector，并且满足条件的节点只有一个。\")]),e._v(\" \"),a(\"p\",[e._v(\"可见，Fluid支持Fuse客户端的单独的调度策略，这些调度策略为用户提供了更加灵活的Fuse客户端调度策略\")]),e._v(\" \"),a(\"h2\",{attrs:{id:\"环境清理\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#环境清理\"}},[e._v(\"#\")]),e._v(\" 环境清理\")]),e._v(\" \"),a(\"div\",{staticClass:\"language-shell extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[a(\"code\",[e._v(\"$ kubectl delete -f \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[e._v(\".\")]),e._v(\"\\n\\n$ kubectl label node cn-beijing.192.168.1.146 cache-node-\\n\")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);","extractedComments":[]}