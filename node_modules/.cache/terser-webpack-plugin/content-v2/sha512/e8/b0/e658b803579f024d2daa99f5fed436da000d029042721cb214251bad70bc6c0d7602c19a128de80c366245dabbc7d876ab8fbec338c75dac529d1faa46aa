{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{506:function(e,a,t){\"use strict\";t.r(a);var n=t(50),s=Object(n.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[t(\"h1\",{attrs:{id:\"示例-用fluid加速机器学习训练\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#示例-用fluid加速机器学习训练\"}},[e._v(\"#\")]),e._v(\" 示例 - 用Fluid加速机器学习训练\")]),e._v(\" \"),t(\"p\",[e._v(\"本文介绍如何使用Fluid部署\"),t(\"a\",{attrs:{href:\"https://cn.aliyun.com/product/oss\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"阿里云OSS\"),t(\"OutboundLink\")],1),e._v(\"云端\"),t(\"a\",{attrs:{href:\"http://www.image-net.org/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"ImageNet\"),t(\"OutboundLink\")],1),e._v(\"数据集到Kubernetes集群，并使用\"),t(\"a\",{attrs:{href:\"https://github.com/kubeflow/arena\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Arena\"),t(\"OutboundLink\")],1),e._v(\"在此数据集上训练ResNet-50模型。本文以四机八卡测试环境为例。\")]),e._v(\" \"),t(\"h2\",{attrs:{id:\"前提条件\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#前提条件\"}},[e._v(\"#\")]),e._v(\" 前提条件\")]),e._v(\" \"),t(\"ul\",[t(\"li\",[t(\"a\",{attrs:{href:\"https://github.com/fluid-cloudnative/fluid\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Fluid\"),t(\"OutboundLink\")],1),e._v(\" (version >= 0.1.0)\")]),e._v(\" \"),t(\"li\",[t(\"a\",{attrs:{href:\"https://github.com/kubeflow/arena\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Arena\"),t(\"OutboundLink\")],1),e._v(\"（version >= 0.4.0）\")]),e._v(\" \"),t(\"li\",[t(\"a\",{attrs:{href:\"https://github.com/horovod/horovod\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Horovod\"),t(\"OutboundLink\")],1),e._v(\" (version=0.18.1)\")]),e._v(\" \"),t(\"li\",[t(\"a\",{attrs:{href:\"https://github.com/tensorflow/benchmarks/tree/cnn_tf_v1.14_compatible\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Benchmark\"),t(\"OutboundLink\")],1)])]),e._v(\" \"),t(\"blockquote\",[t(\"p\",[t(\"strong\",[e._v(\"注意\")]),e._v(\"：\")]),e._v(\" \"),t(\"ol\",[t(\"li\",[t(\"p\",[e._v(\"本文要求在Kubernetes集群中已安装好Fluid，如果您还没部署Fluid，请参考\"),t(\"RouterLink\",{attrs:{to:\"/zh/userguide/install.html\"}},[e._v(\"Fluid安装手册\")]),e._v(\"在您的Kubernetes集群上安装Fluid。\")],1)]),e._v(\" \"),t(\"li\",[t(\"p\",[t(\"code\",[e._v(\"Arena\")]),e._v(\"是一个方便数据科学家运行和监视机器学习任务的CLI, 本文使用\"),t(\"code\",[e._v(\"Arena\")]),e._v(\"提交机器学习任务，安装教程可参考\"),t(\"a\",{attrs:{href:\"https://github.com/kubeflow/arena/blob/master/docs/installation/INSTALL_FROM_BINARY.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Arena安装教程\"),t(\"OutboundLink\")],1),e._v(\"。\")])]),e._v(\" \"),t(\"li\",[t(\"p\",[e._v(\"本演示中使用的Horovod， TensorFlow和Benchmark代码均已经开源，您可以从上述链接中获取。\")])])])]),e._v(\" \"),t(\"h2\",{attrs:{id:\"用fluid部署云端数据集\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#用fluid部署云端数据集\"}},[e._v(\"#\")]),e._v(\" 用Fluid部署云端数据集\")]),e._v(\" \"),t(\"h3\",{attrs:{id:\"创建dataset和runtime\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#创建dataset和runtime\"}},[e._v(\"#\")]),e._v(\" 创建Dataset和Runtime\")]),e._v(\" \"),t(\"p\",[e._v(\"如下的\"),t(\"code\",[e._v(\"dataset.yaml\")]),e._v(\"文件中定义了一个\"),t(\"code\",[e._v(\"Dataset\")]),e._v(\"和\"),t(\"code\",[e._v(\"Runtime\")]),e._v(\"，并\"),t(\"code\",[e._v(\"---\")]),e._v(\"符号将它们的定义分割。\")]),e._v(\" \"),t(\"p\",[e._v(\"数据集存储在\"),t(\"a\",{attrs:{href:\"https://cn.aliyun.com/product/oss\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"阿里云OSS\"),t(\"OutboundLink\")],1),e._v(\"，为保证Alluxio能够成功挂载OSS上的数据集，请确保\"),t(\"code\",[e._v(\"dataset.yaml\")]),e._v(\"文件中设置了正确的\"),t(\"code\",[e._v(\"mountPoint\")]),e._v(\"、\"),t(\"code\",[e._v(\"fs.oss.accessKeyId\")]),e._v(\"、\"),t(\"code\",[e._v(\"fs.oss.accessKeySecret\")]),e._v(\"和\"),t(\"code\",[e._v(\"fs.oss.endpoint\")]),e._v(\"。\")]),e._v(\" \"),t(\"blockquote\",[t(\"p\",[e._v(\"你可以参考Alluxio的官方文档示例\"),t(\"a\",{attrs:{href:\"https://docs.alluxio.io/os/user/stable/en/ufs/OSS.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Aliyun Object Storage Service\"),t(\"OutboundLink\")],1),e._v(\"，了解更多在Alluxio中使用OSS的例子。\")]),e._v(\" \"),t(\"p\",[e._v(\"如果您希望自己准备数据集，可以访问ImageNet官方网站 \"),t(\"a\",{attrs:{href:\"http://image-net.org/download-images\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"http://image-net.org/download-images\"),t(\"OutboundLink\")],1),e._v(\"。\")]),e._v(\" \"),t(\"p\",[e._v(\"如果你希望使用我们提供的数据集重现这个实验，请在社区开Issue申请数据集下载。\")])]),e._v(\" \"),t(\"p\",[e._v(\"本文档以阿里云的V100四机八卡为例，所以在\"),t(\"code\",[e._v(\"dataset.yaml\")]),e._v(\"中设置\"),t(\"code\",[e._v(\"spec.replicas=4\")]),e._v(\"。为了保证数据被缓存在V100机器上，配置了\"),t(\"code\",[e._v(\"nodeAffinity\")]),e._v(\"。此外，\"),t(\"code\",[e._v(\"dataset.yaml\")]),e._v(\"文件还根据我们的测试经验设置了许多参数以优化Alluxio的IO性能（包括Alluxio、Fuse和JVM等层次），您可以自行根据机器配置和任务需求调整参数。\")]),e._v(\" \"),t(\"div\",{staticClass:\"language-shell extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[t(\"code\",[e._v(\"$ \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[e._v(\"cat\")]),e._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<<\")]),e._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[e._v(\"EOF\"),t(\"span\",{pre:!0,attrs:{class:\"token bash punctuation\"}},[e._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\">>\")]),e._v(\" dataset.yaml\")]),e._v('\\napiVersion: data.fluid.io/v1alpha1\\nkind: Dataset\\nmetadata:\\n  name: imagenet\\nspec:\\n  mounts:\\n  - mountPoint: oss://<OSS_BUCKET>/<OSS_DIRECTORY>/\\n    name: imagenet\\n    options:\\n      fs.oss.accessKeyId: <OSS_ACCESS_KEY_ID>\\n      fs.oss.accessKeySecret: <OSS_ACCESS_KEY_SECRET>\\n      fs.oss.endpoint: <OSS_ENDPOINT>\\n  nodeAffinity:\\n    required:\\n      nodeSelectorTerms:\\n        - matchExpressions:\\n            - key: aliyun.accelerator/nvidia_name\\n              operator: In\\n              values:\\n                - Tesla-V100-SXM2-16GB\\n---\\napiVersion: data.fluid.io/v1alpha1\\nkind: AlluxioRuntime\\nmetadata:\\n  name: imagenet\\nspec:\\n  replicas: 4\\n  data:\\n    replicas: 1\\n#  alluxioVersion:\\n#    image: registry.cn-huhehaote.aliyuncs.com/alluxio/alluxio\\n#    imageTag: \"2.3.0-SNAPSHOT-bbce37a\"\\n#    imagePullPolicy: Always\\n  tieredstore:\\n    levels:\\n      - mediumtype: SSD\\n        path: /var/lib/docker/alluxio\\n        quota: 50Gi\\n        high: \"0.99\"\\n        low: \"0.8\"\\nEOF')]),e._v(\"\\n\")])])]),t(\"p\",[e._v(\"创建Dataset和Runtime：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language-shell extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[t(\"code\",[e._v(\"$ kubectl create -f dataset.yaml\\n\")])])]),t(\"p\",[e._v(\"检查Alluxio Runtime，可以看到\"),t(\"code\",[e._v(\"1\")]),e._v(\"个Master，\"),t(\"code\",[e._v(\"4\")]),e._v(\"个Worker和\"),t(\"code\",[e._v(\"4\")]),e._v(\"个Fuse已成功部署：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language-shell extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[t(\"code\",[e._v(\"$ kubectl describe alluxioruntime imagenet \\nName:         imagenet\\nNamespace:    default\\nLabels:       \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<\")]),e._v(\"none\"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\">\")]),e._v(\"\\nAnnotations:  \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<\")]),e._v(\"none\"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\">\")]),e._v(\"\\nAPI Version:  data.fluid.io/v1alpha1\\nKind:         AlluxioRuntime\\nMetadata:\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[e._v(\"# more metadata\")]),e._v(\"\\nSpec:\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[e._v(\"# more spec\")]),e._v(\"\\nStatus:\\n  Cache States:\\n    Cache Capacity:     200GiB\\n    Cached:             0B\\n    Cached Percentage:  \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"0\")]),e._v(\"%\\n  Conditions:\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[e._v(\"# more conditions\")]),e._v(\"\\n  Current Fuse Number Scheduled:    \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"4\")]),e._v(\"\\n  Current Master Number Scheduled:  \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"1\")]),e._v(\"\\n  Current Worker Number Scheduled:  \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"4\")]),e._v(\"\\n  Desired Fuse Number Scheduled:    \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"4\")]),e._v(\"\\n  Desired Master Number Scheduled:  \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"1\")]),e._v(\"\\n  Desired Worker Number Scheduled:  \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"4\")]),e._v(\"\\n  Fuse Number Available:            \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"4\")]),e._v(\"\\n  Fuse Numb    Status:                True\\n    Type:                  Ready\\n  Phase:                   Bound\\n  Runtimes:\\n    Category:   Accelerate\\n    Name:       imagenet\\n    Namespace:  default\\n    Type:       alluxio\\n  Ufs Total:    \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"143\")]),e._v(\".7GiB\\nEvents:         \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<\")]),e._v(\"none\"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\">\")]),e._v(\"\\n\")])])]),t(\"p\",[e._v(\"同时，检查到Dataset也绑定到Alluxio Runtime：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language-shell extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[t(\"code\",[e._v(\"$ kubectl describe dataset\\nName:         imagenet\\nNamespace:    default\\nLabels:       \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<\")]),e._v(\"none\"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\">\")]),e._v(\"\\nAnnotations:  \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<\")]),e._v(\"none\"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\">\")]),e._v(\"\\nAPI Version:  data.fluid.io/v1alpha1\\nKind:         Dataset\\nMetadata:\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[e._v(\"# more metadata\")]),e._v(\"\\nSpec:\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[e._v(\"# more spec\")]),e._v(\"\\nStatus:\\n  Cache States:\\n    Cache Capacity:     200GiB\\n    Cached:             0B\\n    Cached Percentage:  \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"0\")]),e._v(\"%\\n  Conditions:\\n    Last Transition Time:  \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"2020\")]),e._v(\"-08-18T11:01:09Z\\n    Last Update Time:      \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"2020\")]),e._v(\"-08-18T11:02:48Z\\n    Message:               The ddc runtime is ready.\\n    Reason:                DatasetReady\\n    Status:                True\\n    Type:                  Ready\\n  Phase:                   Bound\\n  Runtimes:\\n    Category:   Accelerate\\n    Name:       imagenet\\n    Namespace:  default\\n    Type:       alluxio\\n  Ufs Total:    \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"143\")]),e._v(\".7GiB\\nEvents:         \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<\")]),e._v(\"none\"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\">\")]),e._v(\"\\n\")])])]),t(\"p\",[e._v(\"检查pv和pvc，名为imagenet的pv和pvc被成功创建：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language-shell extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[t(\"code\",[e._v(\"$ kubectl get pv,pvc\\nNAME                        CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM              STORAGECLASS   REASON   AGE\\npersistentvolume/imagenet   100Gi      RWX            Retain           Bound    default/imagenet                           7m11s\\n\\nNAME                             STATUS   VOLUME     CAPACITY   ACCESS MODES   STORAGECLASS   AGE\\npersistentvolumeclaim/imagenet   Bound    imagenet   100Gi      RWX                           7m11s\\n\")])])]),t(\"p\",[e._v(\"至此，OSS云端数据集已成功部署到Kubernetes集群中。\")]),e._v(\" \"),t(\"h2\",{attrs:{id:\"示例-使用arena提交深度学习任务\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#示例-使用arena提交深度学习任务\"}},[e._v(\"#\")]),e._v(\" 示例：使用Arena提交深度学习任务\")]),e._v(\" \"),t(\"p\",[t(\"code\",[e._v(\"Arena\")]),e._v(\"提供了便捷的方式帮助用户提交和监控机器学习任务。在本文中，我们使用\"),t(\"code\",[e._v(\"Arena\")]),e._v(\"简化机器学习任务的部署流程。\")]),e._v(\" \"),t(\"p\",[e._v(\"如果您已经安装\"),t(\"code\",[e._v(\"Arena\")]),e._v(\"，并且云端数据集已成功部署到本地集群中，只需要简单执行以下命令便能提交ResNet50四机八卡训练任务：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language-shell extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[t(\"code\",[e._v(\"arena submit mpi \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[e._v(\"\\\\\")]),e._v(\"\\n    --name horovod-resnet50-v2-4x8-fluid \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[e._v(\"\\\\\")]),e._v(\"\\n    --gpus\"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"=\")]),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"8\")]),e._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[e._v(\"\\\\\")]),e._v(\"\\n    --workers\"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"=\")]),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"4\")]),e._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[e._v(\"\\\\\")]),e._v(\"\\n    --working-dir\"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"=\")]),e._v(\"/horovod-demo/tensorflow-demo/ \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[e._v(\"\\\\\")]),e._v(\"\\n    --data imagenet:/data \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[e._v(\"\\\\\")]),e._v(\"\\n    -e \"),t(\"span\",{pre:!0,attrs:{class:\"token assign-left variable\"}},[e._v(\"DATA_DIR\")]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"=\")]),e._v(\"/data/imagenet \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[e._v(\"\\\\\")]),e._v(\"\\n    -e \"),t(\"span\",{pre:!0,attrs:{class:\"token assign-left variable\"}},[e._v(\"num_batch\")]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"=\")]),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"1000\")]),e._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[e._v(\"\\\\\")]),e._v(\"\\n    -e \"),t(\"span\",{pre:!0,attrs:{class:\"token assign-left variable\"}},[e._v(\"datasets_num_private_threads\")]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"=\")]),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"8\")]),e._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[e._v(\"\\\\\")]),e._v(\"\\n    --image\"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"=\")]),e._v(\"registry.cn-hangzhou.aliyuncs.com/tensorflow-samples/horovod-benchmark-dawnbench-v2:0.18.1-tf1.14.0-torch1.2.0-mxnet1.5.0-py3.6 \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[e._v(\"\\\\\")]),e._v(\"\\n    ./launch-example.sh \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"4\")]),e._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"8\")]),e._v(\"\\n\")])])]),t(\"p\",[e._v(\"Arena参数说明：\")]),e._v(\" \"),t(\"ul\",[t(\"li\",[t(\"code\",[e._v(\"--name\")]),e._v(\"：指定job的名字\")]),e._v(\" \"),t(\"li\",[t(\"code\",[e._v(\"--workers\")]),e._v(\"：指定参与训练的节点（worker）数\")]),e._v(\" \"),t(\"li\",[t(\"code\",[e._v(\"--gpus\")]),e._v(\"：指定每个worker使用的GPU数\")]),e._v(\" \"),t(\"li\",[t(\"code\",[e._v(\"--working-dir\")]),e._v(\"：指定工作路径\")]),e._v(\" \"),t(\"li\",[t(\"code\",[e._v(\"--data\")]),e._v(\"：挂载Volume \"),t(\"code\",[e._v(\"imagenet\")]),e._v(\"到worker的\"),t(\"code\",[e._v(\"/data\")]),e._v(\"目录\")]),e._v(\" \"),t(\"li\",[t(\"code\",[e._v(\"-e DATA_DIR\")]),e._v(\"：指定数据集位置\")]),e._v(\" \"),t(\"li\",[t(\"code\",[e._v(\"./launch-example.sh 4 8\")]),e._v(\"：运行脚本启动四机八卡测试\")])]),e._v(\" \"),t(\"p\",[e._v(\"检查任务是否正常执行：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language-shell extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[t(\"code\",[e._v(\"$ arena get horovod-resnet50-v2-4x8-fluid -e\\nSTATUS: RUNNING\\nNAMESPACE: default\\nPRIORITY: N/A\\nTRAINING DURATION: 16s\\n\\nNAME                           STATUS   TRAINER  AGE  \"),t(\"span\",{pre:!0,attrs:{class:\"token environment constant\"}},[e._v(\"INSTANCE\")]),e._v(\"                                      NODE\\nhorovod-resnet50-v2-4x8-fluid  RUNNING  MPIJOB   16s  horovod-resnet50-v2-4x8-fluid-launcher-czlfn  \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"192.168\")]),e._v(\".1.21\\nhorovod-resnet50-v2-4x8-fluid  RUNNING  MPIJOB   16s  horovod-resnet50-v2-4x8-fluid-worker-0        \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"192.168\")]),e._v(\".1.16\\nhorovod-resnet50-v2-4x8-fluid  RUNNING  MPIJOB   16s  horovod-resnet50-v2-4x8-fluid-worker-1        \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"192.168\")]),e._v(\".1.21\\nhorovod-resnet50-v2-4x8-fluid  RUNNING  MPIJOB   16s  horovod-resnet50-v2-4x8-fluid-worker-2        \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"192.168\")]),e._v(\".1.25\\nhorovod-resnet50-v2-4x8-fluid  RUNNING  MPIJOB   16s  horovod-resnet50-v2-4x8-fluid-worker-3        \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"192.168\")]),e._v(\".3.29\\n\")])])]),t(\"p\",[e._v(\"如果您看到\"),t(\"code\",[e._v(\"4\")]),e._v(\"个处于\"),t(\"code\",[e._v(\"RUNNING\")]),e._v(\"状态的worker，说明您已经成功启动训练。\")]),e._v(\" \"),t(\"p\",[e._v(\"如果您想知道训练进行到哪一步了，请检查Arena日志：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language-shell extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[t(\"code\",[e._v(\"$ arena logs --tail \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"100\")]),e._v(\" -f horovod-resnet50-v2-4x8-fluid\\n\")])])]),t(\"h2\",{attrs:{id:\"环境清理\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#环境清理\"}},[e._v(\"#\")]),e._v(\" 环境清理\")]),e._v(\" \"),t(\"div\",{staticClass:\"language-shell extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[t(\"code\",[e._v(\"$ kubectl delete -f dataset.yaml\\n\")])])])])}),[],!1,null,null,null);a.default=s.exports}}]);","extractedComments":[]}