{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{485:function(t,l,a){\"use strict\";a.r(l);var v=a(50),i=Object(v.a)({},(function(){var t=this,l=t.$createElement,a=t._self._c||l;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"fluid-0-5-版本发布-开启数据集缓存在线弹性扩缩容之路\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#fluid-0-5-版本发布-开启数据集缓存在线弹性扩缩容之路\"}},[t._v(\"#\")]),t._v(\" Fluid 0.5 版本发布：开启数据集缓存在线弹性扩缩容之路\")]),t._v(\" \"),a(\"p\",[t._v(\"**导读：**为了解决大数据、AI 等数据密集型应用在云原生场景下，面临的异构数据源访问复杂、存算分离 I/O 速度慢、场景感知弱调度低效等痛点问题，南京大学PASALab、阿里巴巴、Alluxio 在 2020 年 6 月份联合发起了开源项目 Fluid。\")]),t._v(\" \"),a(\"p\",[t._v(\"Fluid 是云原生环境下数据密集型应用的高效支撑平台，项目自开源发布以来吸引了众多相关方向领域专家和工程师的关注，在大家的积极反馈下社区不断演进。近期 Fluid 0.5 版本正式发布，在该版本中，Fluid 主要新增改善以下三个方面内容：\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"丰富数据集的操作功能，支持在线弹性扩缩容、元数据备份和恢复。\")]),t._v(\" \"),a(\"li\",[t._v(\"支持多样环境配置部署，满足用户的个性化部署配置需求。\")]),t._v(\" \"),a(\"li\",[t._v(\"新增数据缓存引擎实现，增加用户在公有云上的引擎选择。\")])]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"Fluid 开源项目地址\")]),t._v(\"：https://github.com/fluid-cloudnative/fluid\")]),t._v(\" \"),a(\"p\",[t._v(\"这三大主要功能的开发需求来自众多社区用户的实际生产反馈，此外 Fluid v0.5 还进行了一些 bug 修复和文档更新，欢迎使用体验 Fluid v0.5！\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"Fluidv0.5 下载链接\")]),t._v(\"：https://github.com/fluid-cloudnative/fluid/releases\")]),t._v(\" \"),a(\"p\",[t._v(\"下文是本次新版本发布功能的进一步介绍。\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"丰富数据集的操作功能\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#丰富数据集的操作功能\"}},[t._v(\"#\")]),t._v(\" 丰富数据集的操作功能\")]),t._v(\" \"),a(\"p\",[t._v(\"在本版本中 Fluid 重点丰富了核心抽象对象 —— Dataset（数据集）的相关操作功能，从而使数据密集型应用能够更好地利用云原生提供的弹性、可观测性等基础功能，并增强了用户对数据集管理的灵活性。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"_1-数据集在线弹性缓存扩缩容\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-数据集在线弹性缓存扩缩容\"}},[t._v(\"#\")]),t._v(\" 1. 数据集在线弹性缓存扩缩容\")]),t._v(\" \"),a(\"p\",[t._v(\"这是社区用户一直期待的功能！在 Fluid v0.5 之前，如果用户想要调整数据集的缓存能力，需要以全部卸载缓存引擎再重部署的方式完成。这种方式耗时耗力，还必须考虑数据缓存全部丢失的高昂代价。因此，在新版本中，我们为数据集提供了对缓存弹性扩缩容的支持，用户可以根据自己的场景需求，以不停机方式 on-the-fly 地按需增加某数据集的缓存容量以加速数据访问（扩容）或减少某个不频繁使用的数据集的缓存容量（缩容），从而实现更加精细的弹性资源分配，提高资源利用率。Fluid 内置的控制器会根据策略选择合适的扩缩容节点，例如在缩容时会结合节点上运行任务情况和节点缓存比例作为筛选条件。\")]),t._v(\" \"),a(\"p\",[t._v(\"执行弹性数据集的缓存能力弹性扩缩容，用户只需运行如下命令：\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"kubectl scale alluxioruntimes.data.fluid.io {datasetName}  --replicas={num}\")])]),t._v(\" \"),a(\"p\",[t._v(\"其中 datasetName 对应于数据集的名称，replicas 指定缓存节点的数目。\")]),t._v(\" \"),a(\"p\",[t._v(\"有关数据集手动扩缩容及其效果的演示视频如下：\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"\",alt:\"fly-demo\"}})])])}),[],!1,null,null,null);l.default=i.exports}}]);","extractedComments":[]}