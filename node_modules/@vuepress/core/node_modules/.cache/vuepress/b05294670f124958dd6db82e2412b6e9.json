{"remainingRequest":"/mnt/d/NJU/研究生/FLUID/fluid-website/fluid_vuepress1.x/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/mnt/d/NJU/研究生/FLUID/fluid-website/fluid_vuepress1.x/node_modules/cache-loader/dist/cjs.js??ref--1-0!/mnt/d/NJU/研究生/FLUID/fluid-website/fluid_vuepress1.x/node_modules/vue-loader/lib/index.js??ref--1-1!/mnt/d/NJU/研究生/FLUID/fluid-website/fluid_vuepress1.x/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/mnt/d/NJU/研究生/FLUID/fluid-website/fluid_vuepress1.x/docs/guide/README.md?vue&type=template&id=c72f91d4&","dependencies":[{"path":"/mnt/d/NJU/研究生/FLUID/fluid-website/fluid_vuepress1.x/docs/guide/README.md","mtime":1626248624297},{"path":"/mnt/d/NJU/研究生/FLUID/fluid-website/fluid_vuepress1.x/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/NJU/研究生/FLUID/fluid-website/fluid_vuepress1.x/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/mnt/d/NJU/研究生/FLUID/fluid-website/fluid_vuepress1.x/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/NJU/研究生/FLUID/fluid-website/fluid_vuepress1.x/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/mnt/d/NJU/研究生/FLUID/fluid-website/fluid_vuepress1.x/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}