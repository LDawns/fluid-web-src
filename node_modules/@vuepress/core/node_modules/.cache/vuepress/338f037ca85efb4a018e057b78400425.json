{"remainingRequest":"/mnt/d/NJU/研究生/FLUID/fluid-website/fluid_vuepress1.x/node_modules/vue-loader/lib/index.js??ref--1-1!/mnt/d/NJU/研究生/FLUID/fluid-website/fluid_vuepress1.x/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/mnt/d/NJU/研究生/FLUID/fluid-website/fluid_vuepress1.x/docs/blog/casestudy/README.md?vue&type=template&id=3b2aab3b&","dependencies":[{"path":"/mnt/d/NJU/研究生/FLUID/fluid-website/fluid_vuepress1.x/docs/blog/casestudy/README.md","mtime":1627548287265},{"path":"/mnt/d/NJU/研究生/FLUID/fluid-website/fluid_vuepress1.x/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/NJU/研究生/FLUID/fluid-website/fluid_vuepress1.x/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/mnt/d/NJU/研究生/FLUID/fluid-website/fluid_vuepress1.x/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/NJU/研究生/FLUID/fluid-website/fluid_vuepress1.x/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/mnt/d/NJU/研究生/FLUID/fluid-website/fluid_vuepress1.x/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}